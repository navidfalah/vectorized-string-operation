# -*- coding: utf-8 -*-
"""vectorized string operations data science book.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FdwnAMfo5z8Uk26GcZFogPJ4U4OIGeYu
"""

import numpy as np
import pandas as pd

data = ['peter', 'paul', 'mary']
[s.capitalize() for s in data]

names = pd.Series(data)
names

names.str.capitalize()

monte = pd.Series(['Graham Chapman', 'John Cleese', 'Terry Gilliam',
'Eric Idle', 'Terry Jones', 'Michael Palin'])

monte.str.lower()

obj = monte.str

obj.lower()

obj.len()

obj.startswith('T')

obj.split()

monte.str[0:3]

monte.str.slice(0, 3)

import numpy as np
import pandas as pd

! git clone https://github.com/jakevdp/open-recipe-data

df = pd.read_json("/content/open-recipe-data/recipeitems.json.gz", lines=True, compression='gzip')

df.shape

df.head()

df.ingredients.str.len().describe()

df.name[np.argmax(df.ingredients.str.len())]

spice_list = ['salt', 'pepper', 'oregano', 'sage', 'parsley',
 'rosemary', 'tarragon', 'thyme', 'paprika', 'cumin']

import re
spice_df = pd.DataFrame(dict((spice, df.ingredients.str.contains(spice, re.IGNORECASE))
                             for spice in spice_list))

spice_df.head()

selection = spice_df.query('parsley & paprika & tarragon')

len(selection)

selection

df.name[selection.index]

from datetime import datetime
datetime(year=2015, month=7, day=4)

from dateutil import parser

date = parser.parse("4th of July, 2015")
date

date.strftime('%A')

import numpy as np
date = np.array('2015-07-04', dtype=np.datetime64)
date

np.arange(10)

import pandas as pd

date = pd.to_datetime('4th of July, 2015')
date

date+pd.to_timedelta(np.arange(12), 'D')

index = pd.DatetimeIndex(['2020-07-04', '2020-08-04',
'2021-07-04', '2021-08-04'])
data = pd.Series([0, 1, 2, 3], index=index)

data

data['2020-08']

data['2020-08':'2020-07']

data['2021']

dates = pd.to_datetime([datetime(2021, 7, 3), '4th of July, 2021',
'2021-Jul-6', '07-07-2021', '20210708'])
dates

dates.to_period('D')

dates.to_period('M')

dates - dates[0]

pd.date_range('2015-07-03', '2015-07-10')

pd.date_range('2015-07-03', periods=8)

pd.date_range('2015-07-03', periods=8, freq='H')

pd.period_range('2015-07', periods=8, freq='M')

pd.timedelta_range(0, periods=6, freq='H')

from pandas_datareader import data

! wget https://raw.githubusercontent.com/jakevdp/bicycle-data/main/FremontBridge.csv

data = pd.read_csv('FremontBridge.csv', index_col='Date', parse_dates=True)

data.head()

data.shape

data.dropna().describe()

import matplotlib.pyplot as plt

data.plot()
plt.ylabel('Hourly Bicycle Count')

weekly = data.resample('W').sum()
weekly.plot(style=[':', '--', '-'])
plt.ylabel('Weekly bicycle count')

daily = data.resample('D').sum()
daily.rolling(30, center=True).sum().plot(style=[':', '--', '-'])
plt.ylabel('mean hourly count')

daily.rolling(50, center=True, win_type='gaussian').sum(std=10).plot(style=[':', '--', '-'])
plt.ylabel('mean hourly count')

by_time = data.groupby(data.index.time).mean()
hourly_ticks = 4 * 60 * 60 * np.arange(6)
by_time.plot(xticks=hourly_ticks, style=[':', '--', '-'])

by_weekday = data.groupby(data.index.dayofweek).mean()
by_weekday.index = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
by_weekday.plot(style=[':', '--', '-'])

weekend = np.where(data.index.weekday < 5, 'Weekday', 'Weekend')
by_time = data.groupby([weekend, data.index.time]).mean()

import matplotlib.pyplot as plt
fig, ax = plt.subplots(1, 2, figsize=(14, 5))
by_time.ix['Weekday'].plot(ax=ax[0], title='Weekdays',
xticks=hourly_ticks, style=[':', '--', '-'])
by_time.ix['Weekend'].plot(ax=ax[1], title='Weekends',
xticks=hourly_ticks, style=[':', '--', '-'])

